July 2, 2014
17:16 < jackdesert> So I've been working on a hosted solution for people who want to sync TaskWarrior without having to set up a
server.
17:17 < jackdesert> Just yesterday I was able to sync with the service using certificates that were generated through the
website.
17:17 < jackdesert> Meaning the site is functional :) :)
  17:20 < jackdesert> Perhaps someone from this group would like to try it out and offer feedback on the experience?
  17:22 < jackdesert> Here's the link: http://freecinc.com
  17:33 < pbeckingham> Unode: That's exactly how it went down.
  17:35 < pbeckingham> jackdesert: Interesting.  Will check later.
  17:37 < JuanDaugherty> jackdesert, not me, can do my own, have own commercial intentions





  18:25 < pbeckingham> dzho: But it has been requested, and is on the list.
  18:25  * dzho nods
  18:29 < jackdesert> pbeckingham: Can you elaborate on the weaknesses of taskd-1.0.0, or point me to something in the docs that
  discusses them?
  18:33 < pbeckingham> jackdesert: Right now it doesn't map the cert you use to the one you were given.  For example, I could use
  your cert.  It has to be a valid cert, but it is not connected to the user account.  It needs to be.
  18:34 < JuanDaugherty> using public named based certs would obviate that
  18:34 < pbeckingham> JuanDaugherty: I want to permanently link the cert to the UUID.
  18:36 < JuanDaugherty> ah
  19:01 < jackdesert> pbeckingham: So that's what you meant when you said once that all you really need is the uuid in order to
  sync. I'll try that out tonight.
  19:02 < jackdesert> (all you need to sync a different user's account, that is)
  19:04 < pbeckingham> jackdesert: You need a cert, and it needs to be verifiable, or from the CA.  But it doesn't connect to you,
  ie the UUID.
  19:04 < jackdesert> A question about certificate authorities: I'm still running taskd with a self-signed certificate on
  freecinc.com. What would it take to breach that security? Are we talking about a man-in-the-middle attack?v


  19:04 < jackdesert> pbeckingham: got it
  19:19 < pbeckingham> jackdesert: Not sure, I'm not a security expert.
  19:19 < pbeckingham> Clearly, otherwise taskd would be watertight.
  19:26 < bqf> jackdesert: it moves the attack surface a bit. self-signed means that a compromise at the cert authority doesn't
  affect you, but it also means that people have no way of knowing whether you are being impersonated. i'd say that
  for taskd usage, self-signed is perfectly fine.
  19:30 < JuanDaugherty> that is they don't know without prior arrangements
  19:31 < JuanDaugherty> like they bought something from you that carried the cert
  19:44 < pbeckingham> bqf: Thanks.  Never thought I'd say that.
  20:15 < bqf> pbeckingham: i think you've said that before. including the disclaimer.
  20:20 < pbeckingham> bqf: You're gaslightung me.
  20:32 < jackdesert> Another security question: Since taskd-1.0.0 can use any valid client certificate pair for any user key, the
  way to breach this security would be a brute force attack trying all conceivable user keys (which there are a
      lot of since they are uids)---is that correct?
  20:49 -!- V0id is now known as SkyCat
  20:51 -!- SkyCat is now known as V0id
  21:27 < pbeckingham> jackdesert: No idea.  I'm not a security expert.
  21:28 < pbeckingham> jackdesert: You need to talk to someone smart.  For example, bqf here
  21:28 < pbeckingham> jackdesert: ... might know someone.
  21:36 < Kasperle> if it works as you described (any _valid_ client certificate required to talk to taskd, with access then
      regulated based on a uuid), a brute force attack would not be feasible
  21:40 < Kasperle> going back to what you discussed earlier: from the docs it looks like every taskd installation will have its
  own, autogenerated CA and server key
  21:40 < Kasperle> the CA is then distributed to all clients
  21:41 < Kasperle> that's actually much better than using certs issued by public CAs
  21:42 < Kasperle> but: have you considered whether a client cert might be accepted by task as a server cert?
  21:43 < Kasperle> it looks like they are issued by the same CA, so that an attacker in a man-in-the-middle position might be able
  to use his or her own client cert to pose as the taskd, depending on how well the client verifies the cert
(purpose, common name, etc.)
  21:45 -!- coddingtonbear is now known as coddingtonbear|a
  21:47 < pbeckingham> Kasperle: Thank you.  I'm not sure the client cert has the right bits set.  Need to look into this.

:ruby

  user = locals[:user]
  raise ArgumentError, 'User required' unless user.is_a?(User)
  key_filename  =           "#{user.name}.key.pem"
  cert_filename =           "#{user.name}.cert.pem"
  ca_filename   =           "#{user.name}.ca.pem"
  mirakel_config_filename = "#{user.name}.mirakel_config.txt"

  content_for(:title) { "#{user.name}_instructions" }
  mirakel_download_link = haml :_mirakel_config_download, locals: { password: user.password, filename: mirakel_config_filename, uuid_for_mirakel: user.uuid }


%p.center
  Your keys have been generated...let's get started!
  .mirakel= "(Mirakel users, you just need #{mirakel_download_link})"

.space.generate

%section.first-color
  =haml :_man, locals: {type: :point}

  .step
    .label Step 1:
    %h3 Prereqs
  .instruct Make sure TaskWarrior 2.3.0 or greater is installed

  .command task --version


%section.first-color
  =haml :_man, locals: {type: :smile}

  .step
    .label Step 2:
    %h3 Save Keys

  .instruct Save the following files to your <span class='normal-case'>~/.task</span> directory

  = haml :_file_download, locals: { password: user.password, filename: key_filename }
  = haml :_file_download, locals: { password: user.password, filename: cert_filename }
  = haml :_file_download, locals: { password: user.password, filename: ca_filename }


%section.second-color
  =haml :_man, locals: {type: :tilt}

  .step
    .label Step 3:
    %h3 Configuration

  .instruct Run the following in a terminal (one block at a time because you have to confirm each step)

  .command= "task config taskd.server #{Forge::SERVER}"
  %br

  .command= "task config taskd.key ~/.task/#{key_filename}"
  %br

  .command= "task config taskd.certificate ~/.task/#{cert_filename}"
  %br

  .command= "task config taskd.ca ~/.task/#{ca_filename}"
  %br

  .command= "task config taskd.credentials &#92<br>'#{user.organization}/#{user.name}/#{user.uuid}'"


%section.second-color
  =haml :_man, locals: {type: :inspect}

  .step
    .label Step 4:
    %h3 Verify
  .instruct Run the diagnostic tool

  .command task diagnostics

  .instruct and make sure that in the output <span class='diagnostics'>CA</span>, <span class='diagnostics'>Cert</span>, and <span class='diagnostics'>Key</span> are all "readable". Also ensure that you have a value for <span class='diagnostics'>Server</span> and a value for <span class='diagnostics'>Creds</span>.


%section.second-color
  =haml :_man, locals: {type: :tada}

  .step
    .label Step 5:
    %h3 Sync

  .instruct The moment you've been waiting for!
  .command task sync init


%section.first-color
  /=haml :_man, locals: {type: :inspect}

  .step
    .label Step 6:
    %h3 Save This

  .instruct (optional) If you want to set up another computer to sync with the same account, click <span class='menus'>"File > Save As"</span> from your browser and save this page. Open the resulting html file on your other computer, and complete steps 1-5.

